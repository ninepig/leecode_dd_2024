1滑动窗口算法介绍
在计算机网络中，滑动窗口协议（Sliding Window Protocol）是传输层进行流控的一种措施，接收方通过通告发送方自己的窗口大小，
从而控制发送方的发送速度，从而达到防止发送方发送速度过快而导致自己被淹没的目的。我们所要讲解的滑动窗口算法也是利用了同样的特性。

滑动窗口算法（Sliding Window）：在给定数组 / 字符串上维护一个固定长度或不定长度的窗口。可以对窗口进行滑动操作、缩放操作，以及维护最优解操作。

滑动操作：窗口可按照一定方向进行移动。最常见的是向右侧移动。
缩放操作：对于不定长度的窗口，可以从左侧缩小窗口长度，也可以从右侧增大窗口长度。
滑动窗口利用了双指针中的快慢指针技巧，我们可以将滑动窗口看做是快慢指针两个指针中间的区间，也可以将滑动窗口看做是快慢指针的一种特殊形式。

2. 滑动窗口适用范围
滑动窗口算法一般用来解决一些查找满足一定条件的连续区间的性质（长度等）的问题。该算法可以将一部分问题中的嵌套循环转变为一个单循环，因此它可以减少时间复杂度。

按照窗口长度的固定情况，我们可以将滑动窗口题目分为以下两种：

固定长度窗口：窗口大小是固定的。
不定长度窗口：窗口大小是不固定的。
求解最大的满足条件的窗口。
求解最小的满足条件的窗口。
下面来分别讲解一下这两种类型题目。

#3. 固定长度滑动窗口
固定长度滑动窗口算法（Fixed Length Sliding Window）：在给定数组 / 字符串上维护一个固定长度的窗口。可以对窗口进行滑动操作、缩放操作，以及维护最优解操作。
模板
left = 0
right = 0

while right < len(nums):
    # 满足条件的情况下 加入right
    window.append(nums[right])

    # 超过窗口大小时，缩小窗口，维护窗口中始终为 window_size 的长度
    if right - left + 1 >= window_size:
        # ... 维护答案
        window.popleft()
        left += 1

    # 向右侧增大窗口
    right += 1

#4. 不定长度滑动窗口
不定长度滑动窗口算法（Sliding Window）：在给定数组 / 字符串上维护一个不定长度的窗口。可以对窗口进行滑动操作、缩放操作，以及维护最优解操作。

4.1不定长度滑动窗口代码模板

left = 0
right = 0

while right < len(nums):
    window.append(nums[right])

    while 窗口需要缩小:
        # ... 可维护答案
        window.popleft()
        left += 1

    # 向右侧增大窗口
    right += 1


1423 1658 类似 一个fix 一个不fix 很有意思

当不固定size的windows时
size = [right - left]  不用while 循环 用if left 必须pop，所以不在结果之中
size = [right - left + 1] 用 while循环，left在循环结束的时候+1 了 所以要补上

424 159 1004 用if

连续子数组的个数

子数组的length 相当于子数组个数（排列组合）
ans += right - left +1

todo
480 太复杂了 没做 面经再说
718 应该是dp来做 滑动数组不太好做 但是一道很好的题
862 太难了。。deque https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/solutions/143726/c-java-python-o-n-using-deque/
1004 似乎有疑问？
467 dp 不是滑动
