'''
初始序列为：[6, 2, 3, 5, 1, 4]。
第 1 趟排序，从序列中前 6 个元素的第 1 个元素开始，相邻两个元素进行比较和交换：：
先将序列中第 1 个元素与第 2 个元素进行比较，也就是将 6 和 2 进行比较。因为 6 > 2，所以两者交换位置，交换位置后，2 在第 1 位，6 在第 2 位。
然后将第 2 个元素与第 3 个元素比较，也就是将 2 和 3 进行比较。因为 2 < 3，所以不用交换；
依次类推，直到第 5 个元素与第 6 个元素比较（或交换）为止。
经过第 1 趟排序，使得 6 个元素中第 6 个值最大元素被安置在第 6 个位置上。此时序列变为： [2, 3, 5, 1, 4, 6]。
第 2 趟排序，从序列中前 5 个元素的第 1 个元素开始，相邻两个元素进行比较和交换：：
先将序列中第 1 个元素与第 2 个元素进行比较，也就是将 2 和 3 进行比较。因为 2 < 3，所以不用交换；
然后将第 2 个元素与第 3 个元素比较，也就是将 3 和 4 进行比较。因为 3 < 5，所以不用交换；
然后将第 3 个元素与第 4 个元素比较，也就是将 5 和 1 进行比较。因为 5 > 1，所以两者交换位置，交换位置后，1 在第 3 位，5 在第 4 位。
依次类推，直到第 4 个元素与第 5 个元素比较（或交换）为止。
经过第 2 趟排序，使得 5 个元素中第 5 个值最大元素被安置在第 5 个位置上。此时序列变为： [2, 3, 1, 4, 5, 6]。
依次类推，对前 4 个元素重复上述排序过程，直到某一趟排序过程中不出现元素交换位置的动作，则排序结束。此时序列变为：[1, 2, 3, 4, 5, 6]。
'''
class Solution:
    def bubbleSort(self, arr):
        # 第 i 趟排序 , 需要额外的-1 ， 因为j会加+1 ,j 和 j+1 比较
        for i in range(len(arr) - 1):
            # 从序列中前 n - i + 1 个元素的第 1 个元素开始，相邻两个元素进行比较
            for j in range(len(arr) - i - 1):
                # 相邻两个元素进行比较，如果前者大于后者，则交换位置
                if arr[j] > arr[j + 1]:
                    arr[j], arr[j + 1] = arr[j + 1], arr[j]

        return arr

    def sortArray(self, nums: List[int]) -> List[int]:
        return self.bubbleSort(nums)